diff --git a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua
index 9bdf3a3..dd9eac1 100644
--- a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua
+++ b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua
@@ -342,7 +342,7 @@ av.write = write_float
 ifs = m:section(TypedSection, "Interface", translate("Interfaces"))
 ifs.addremove = true
 ifs.anonymous = true
-ifs.extedit   = luci.dispatcher.build_url("admin/services/olsrd/iface/%s")
+ifs.extedit   = luci.dispatcher.build_url("mini/services/olsrd/iface/%s")
 ifs.template  = "cbi/tblsection"
 
 function ifs.create(...)
diff --git a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua
index 25692fd..2a5c9ce 100644
--- a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua
+++ b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua
@@ -26,7 +26,7 @@ m = Map("olsrd", translate("OLSR Daemon - Interface"),
 	"It runs on any wifi card that supports ad-hoc mode and of course on any ethernet device. "..
 	"Visit <a href='http://www.olsr.org'>olsrd.org</a> for help and documentation."))
 
-m.redirect = luci.dispatcher.build_url("admin/services/olsrd")
+m.redirect = luci.dispatcher.build_url("mini/services/olsrd")
 
 if not arg[1] or m.uci:get("olsrd", arg[1]) ~= "Interface" then
 	luci.http.redirect(m.redirect)
diff --git a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua
index 2cfccdd..7e1d4ba 100644
--- a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua
+++ b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua
@@ -247,7 +247,7 @@ else
 	t.override_scheme = true
 	function t.extedit(self, section)
 		local lib = self.map:get(section, "library") or ""
-		return luci.dispatcher.build_url("admin", "services", "olsrd", "plugins") .. "/" .. lib
+		return luci.dispatcher.build_url("mini", "services", "olsrd", "plugins") .. "/" .. lib
 	end
 
 	ign = t:option( Flag, "ignore", translate("Enabled") )
diff --git a/applications/luci-olsr/luasrc/controller/olsr.lua b/applications/luci-olsr/luasrc/controller/olsr.lua
index fc44820..02d2dd3 100644
--- a/applications/luci-olsr/luasrc/controller/olsr.lua
+++ b/applications/luci-olsr/luasrc/controller/olsr.lua
@@ -9,6 +9,7 @@ function index()
 	page.target = template("status-olsr/overview")
 	page.title  = _("OLSR")
 	page.subindex = true
+	assign({"mini", "status", "olsr"}, {"admin", "status", "olsr"}, "OLSR", 30)
 
 	local page  = node("admin", "status", "olsr", "neighbors")
 	page.target = call("action_neigh")
@@ -51,26 +52,31 @@ function index()
 		cbi("olsr/olsrd"), "OLSR"
 	)
 	ol.subindex = true
+	assign({"mini", "services", "olsrd"}, {"admin", "services", "olsrd"}, _("olsr"))
 
 	entry(
 		{"admin", "services", "olsrd", "iface"},
 		cbi("olsr/olsrdiface")
 	).leaf = true
+	assign({"mini", "services", "olsrd", "iface"}, {"admin", "services", "olsrd", "iface"}, _("Interface"))
 
 	entry(
 		{"admin", "services", "olsrd", "hna"},
 		cbi("olsr/olsrdhna"), _("HNA Announcements")
 	)
+	assign({"mini", "services", "olsrd", "hna"}, {"admin", "services", "olsrd", "hna"}, _("HNA Announcements"))
 
 	oplg = entry(
 		{"admin", "services", "olsrd", "plugins"},
 		cbi("olsr/olsrdplugins"), _("Plugins")
 	)
+	assign({"mini", "services", "olsrd", "plugins"}, {"admin", "services", "olsrd", "plugins"}, _("Plugins"))
 
 	odsp = entry(
 		{"admin", "services", "olsrd", "display"},
 		cbi("olsr/olsrddisplay"), _("Display")
-		)
+	)
+	assign({"mini", "services", "olsrd", "display"}, {"admin", "services", "olsrd", "display"}, _("Display"))
 
 	oplg.leaf = true
 	oplg.subindex = true
@@ -84,6 +90,11 @@ function index()
 				cbi("olsr/olsrdplugins"),
 				nil --'Plugin "%s"' % lib:gsub("^olsrd_",""):gsub("%.so.+$","")
 			)
+			assign(
+				{"mini", "services", "olsrd", "plugins", lib },
+				{"admin", "services", "olsrd", "plugins", lib},
+				lib
+			)
 		end
 	)
 end
