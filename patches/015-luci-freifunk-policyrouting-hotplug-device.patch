Index: openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/hotplug.d/iface/30-policyrouting
===================================================================
--- openwrt.orig/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/hotplug.d/iface/30-policyrouting
+++ openwrt/feeds/luci/contrib/package/freifunk-policyrouting/files/etc/hotplug.d/iface/30-policyrouting
@@ -16,18 +16,18 @@ if [ "$ACTION" = "ifup" ] && [ "$enable"
 	network_get_physdev dev $INTERFACE
 	case $(uci get network.${INTERFACE}.proto) in none)
 		# ubus status/netifd does not output ip4addr if proto=none
-		net=$(ip -4 addr show dev ${dev} scope global|sed -n '2s,^[[:space:]]\+inet \([^[:space:]]\+\).*,\1,p')
-		#net6=$(ip -6 addr show dev ${dev} scope global|sed -n '2s,^[[:space:]]\+inet6 \([^[:space:]]\+\).*,\1,p')
+		net=$(ip -4 addr show dev ${DEVICE} scope global|sed -n '2s,^[[:space:]]\+inet \([^[:space:]]\+\).*,\1,p')
+		#net6=$(ip -6 addr show dev ${DEVICE} scope global|sed -n '2s,^[[:space:]]\+inet6 \([^[:space:]]\+\).*,\1,p')
 	;;*)
 		network_get_subnet net $INTERFACE
 		#network_get_subnet6 net6 $INTERFACE
 	;;esac
 
-	if [ "$net" != "" -a -n "$dev" ]; then
+	if [ "$net" != "" -a -n "${DEVICE}" ]; then
 		eval $(/bin/ipcalc.sh $net)
 		if [ "$PREFIX" != "0" -a "$NETWORK" != "127.0.0.0" ]; then
 			if [ ! "$(ip route show table localnets |grep "$NETWORK/$PREFIX dev")" ]; then
-				cmd="ip route add $NETWORK/$PREFIX dev $dev table localnets"
+				cmd="ip route add $NETWORK/$PREFIX dev ${DEVICE} table localnets"
 				$cmd
 				if [ "$?" = 0 ]; then
 					logger -s -t policyrouting "Add route: $cmd"
@@ -36,7 +36,7 @@ if [ "$ACTION" = "ifup" ] && [ "$enable"
 				fi
 			fi
 			if [ ! "$(ip route show table olsr |grep "$NETWORK/$PREFIX dev")" ]; then
-				cmd="ip route add $NETWORK/$PREFIX dev $dev table olsr"
+				cmd="ip route add $NETWORK/$PREFIX dev ${DEVICE} table olsr"
 				$cmd
 				if [ "$?" = 0 ]; then
 					logger -s -t policyrouting "Add route: $cmd"
@@ -48,7 +48,7 @@ if [ "$ACTION" = "ifup" ] && [ "$enable"
 		fi
 
 		if [ -n "$net6" ]; then
-			cmd="ip -6 route add $net6 dev $dev table localnets"
+			cmd="ip -6 route add $net6 dev ${DEVICE} table localnets"
 			$cmd 2>&1 > /dev/null
 			if [ "$?" = 0 ]; then
 				logger -s -t policyrouting "Add route: $cmd (IPv6)"
@@ -67,16 +67,16 @@ if [ "$ACTION" = "ifup" ] && [ "$enable"
 		for n in $networks; do
 			if [ "$INTERFACE" = "$n" ]; then
 				for p in $proto; do
-					if [ ! "$(ip -$p rule show | grep "from all iif $dev lookup olsr-default")" ]; then
-						logger -s -t policyrouting "Use mesh gateway for interface $dev (IPv$p)"
-						ip -$p rule add dev "$dev" lookup olsr-default prio 20000
+					if [ ! "$(ip -$p rule show | grep "from all iif ${DEVICE} lookup olsr-default")" ]; then
+						logger -s -t policyrouting "Use mesh gateway for interface ${DEVICE} (IPv$p)"
+						ip -$p rule add dev "${DEVICE}" lookup olsr-default prio 20000
 						if [ "$strict" != 0 ]; then
-							ip -$p rule add dev "$dev" unreachable prio 20001
+							ip -$p rule add dev "${DEVICE}" unreachable prio 20001
 						fi
 						if [ -z "$(uci -P /var/state get freifunk-policyrouting.${INTERFACE})" ]; then
 							uci -P /var/state set freifunk-policyrouting.${INTERFACE}="state"
 						fi
-						uci -P /var/state set freifunk-policyrouting.${INTERFACE}.device="$dev"
+						uci -P /var/state set freifunk-policyrouting.${INTERFACE}.device="${DEVICE}"
 					fi
 				done
 			fi
