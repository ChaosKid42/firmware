Index: package/dnsmasq/files/dnsmasq.init
===================================================================
--- package/dnsmasq/files/dnsmasq.init	(Revision 33203)
+++ package/dnsmasq/files/dnsmasq.init	(Arbeitskopie)
@@ -1,10 +1,24 @@
 #!/bin/sh /etc/rc.common
-# Copyright (C) 2007 OpenWrt.org
+# Copyright (C) 2007-2012 OpenWrt.org
 
 START=60
+
+SERVICE_USE_PID=1
+
 DNS_SERVERS=""
 DOMAIN=""
 
+ADD_LOCAL_DOMAIN=1
+ADD_LOCAL_HOSTNAME=1
+
+CONFIGFILE="/var/etc/dnsmasq.conf"
+
+xappend() {
+	local value="$1"
+
+	echo "${value#--}" >> $CONFIGFILE
+}
+
 dhcp_calc() {
 	local ip="$1"
 	local res=0
@@ -24,7 +38,7 @@
 	local value="$3"
 	local _loctmp
 	config_get_bool _loctmp "$section" "$option" 0
-	[ $_loctmp -gt 0 ] && append args "$value"
+	[ $_loctmp -gt 0 ] && xappend "$value"
 }
 
 append_parm() {
@@ -34,79 +48,90 @@
 	local _loctmp
 	config_get _loctmp "$section" "$option"
 	[ -z "$_loctmp" ] && return 0
-	append args "$switch $_loctmp"
+	xappend "$switch=$_loctmp"
 }
 
 append_server() {
-	append args "-S $1"
+	xappend "--server=$1"
 }
 
+append_address() {
+	xappend "--address=$1"
+}
+
 append_interface() {
 	local ifname=$(uci_get_state network "$1" ifname "$1")
-	append args "-i $ifname"
+	xappend "--interface=$ifname"
 }
 
 append_notinterface() {
 	local ifname=$(uci_get_state network "$1" ifname "$1")
-	append args "-I $ifname"
+	xappend "--except-interface=$ifname"
 }
 
 append_addnhosts() {
-	append args "-H $1"
+	xappend "--addn-hosts=$1"
 }
 
 append_bogusnxdomain() {
-       append args "-B $1"
+       xappend "--bogus-nxdomain=$1"
 }
 
 dnsmasq() {
 	local cfg="$1"
-	append_bool "$cfg" authoritative "-K"
-	append_bool "$cfg" nodaemon "-d"
-	append_bool "$cfg" domainneeded "-D"
-	append_bool "$cfg" filterwin2k "-f"
-	append_bool "$cfg" nohosts "-h"
-	append_bool "$cfg" nonegcache "-N"
-	append_bool "$cfg" strictorder "-o"
-	append_bool "$cfg" logqueries "-q"
-	append_bool "$cfg" noresolv "-R"
-	append_bool "$cfg" localise_queries "-y"
-	append_bool "$cfg" readethers "-Z"
-	append_bool "$cfg" dbus "-1"
-	append_bool "$cfg" boguspriv "-b"
-	append_bool "$cfg" expandhosts "-E"
+	append_bool "$cfg" authoritative "--dhcp-authoritative"
+	append_bool "$cfg" nodaemon "--no-daemon"
+	append_bool "$cfg" domainneeded "--domain-needed"
+	append_bool "$cfg" filterwin2k "--filterwin2k"
+	append_bool "$cfg" nohosts "--no-hosts"
+	append_bool "$cfg" nonegcache "--no-negcache"
+	append_bool "$cfg" strictorder "--strict-order"
+	append_bool "$cfg" logqueries "--log-queries"
+	append_bool "$cfg" noresolv "--no-resolv"
+	append_bool "$cfg" localise_queries "--localise-queries"
+	append_bool "$cfg" readethers "--read-ethers"
+	append_bool "$cfg" dbus "--enable-dbus"
+	append_bool "$cfg" boguspriv "--bogus-priv"
+	append_bool "$cfg" expandhosts "--expand-hosts"
 	append_bool "$cfg" enable_tftp "--enable-tftp"
-	append_bool "$cfg" nonwildcard "-z"
+	append_bool "$cfg" nonwildcard "--bind-interfaces"
+	append_bool "$cfg" fqdn "--dhcp-fqdn"
 
-	append_parm "$cfg" cachesize "-c"
-	append_parm "$cfg" dnsforwardmax "-0"
-	append_parm "$cfg" port "-p"
-	append_parm "$cfg" ednspacket_max "-P"
-	append_parm "$cfg" dhcpleasemax "-X"
-	append_parm "$cfg" "queryport" "-Q"
-	append_parm "$cfg" "domain" "-s"
-	append_parm "$cfg" "local" "-S"
+	append_parm "$cfg" dhcpscript "--dhcp-script"
+	append_parm "$cfg" cachesize "--cache-size"
+	append_parm "$cfg" dnsforwardmax "--dns-forward-max"
+	append_parm "$cfg" port "--port"
+	append_parm "$cfg" ednspacket_max "--edns-packet-max"
+	append_parm "$cfg" dhcpleasemax "--dhcp-lease-max"
+	append_parm "$cfg" "queryport" "--query-port"
+	append_parm "$cfg" "domain" "--domain"
+	append_parm "$cfg" "local" "--server"
 	config_list_foreach "$cfg" "server" append_server
+	config_list_foreach "$cfg" "address" append_address
 	config_list_foreach "$cfg" "interface" append_interface
 	config_list_foreach "$cfg" "notinterface" append_notinterface
 	config_list_foreach "$cfg" "addnhosts" append_addnhosts
 	config_list_foreach "$cfg" "bogusnxdomain" append_bogusnxdomain
-	append_parm "$cfg" "leasefile" "-l"
-	append_parm "$cfg" "resolvfile" "-r"
+	append_parm "$cfg" "leasefile" "--dhcp-leasefile"
+	append_parm "$cfg" "resolvfile" "--resolv-file"
 	append_parm "$cfg" "tftp_root" "--tftp-root"
 	append_parm "$cfg" "dhcp_boot" "--dhcp-boot"
+	append_parm "$cfg" "local_ttl" "--local-ttl"
 
 	config_get DOMAIN "$cfg" domain
 
+	config_get_bool ADD_LOCAL_DOMAIN "$cfg" add_local_domain 1
+	config_get_bool ADD_LOCAL_HOSTNAME "$cfg" add_local_hostname 1
+
 	config_get_bool readethers "$cfg" readethers
-	[ "$readethers" = "1" ] && [ -e "/etc/ethers" ] || touch /etc/ethers
+	[ "$readethers" = "1" -a \! -e "/etc/ethers" ] && touch /etc/ethers
 
 	config_get leasefile $cfg leasefile
-	[ -n "$leasefile" ] && [ -e "$leasefile" ] || touch "$leasefile"
+	[ -n "$leasefile" -a \! -e "$leasefile" ] && touch "$leasefile"
 	config_get_bool cachelocal "$cfg" cachelocal 1
 
 	config_get hostsfile "$cfg" dhcphostsfile
-	[ -e "$hostsfile" ] && append args "--dhcp-hostsfile=$hostsfile"
+	[ -e "$hostsfile" ] && xappend "--dhcp-hostsfile=$hostsfile"
 
 	local rebind
 	config_get_bool rebind "$cfg" rebind_protection 1
@@ -114,22 +139,26 @@
 		logger -t dnsmasq \
 			"DNS rebinding protection is active," \
 			"will discard upstream RFC1918 responses!"
-		append args "--stop-dns-rebind"
+		xappend "--stop-dns-rebind"
 
 		local rebind_localhost
 		config_get_bool rebind_localhost "$cfg" rebind_localhost 0
 		[ $rebind_localhost -gt 0 ] && {
 			logger -t dnsmasq "Allowing 127.0.0.0/8 responses"
-			append args "--rebind-localhost-ok"
+			xappend "--rebind-localhost-ok"
 		}
 
 		append_rebind_domain() {
 			logger -t dnsmasq "Allowing RFC1918 responses for domain $1"
-			append args "--rebind-domain-ok=$1"
+			xappend "--rebind-domain-ok=$1"
 		}
 
 		config_list_foreach "$cfg" rebind_domain append_rebind_domain
 	}
+
+	dhcp_option_add "$cfg" "" 0
+
+	echo >> $CONFIGFILE
 }
 
 dhcp_subscrid_add() {
@@ -141,9 +170,11 @@
 	config_get subscriberid "$cfg" subscriberid
 	[ -n "$subscriberid" ] || return 0
 
-	append args "--dhcp-subscrid=$networkid,$subscriberid"
+	xappend "--dhcp-subscrid=$networkid,$subscriberid"
 
-	dhcp_option_add "$cfg" "$networkid"
+	config_get_bool force "$cfg" force 0
+
+	dhcp_option_add "$cfg" "$networkid" "$force"
 }
 
 dhcp_remoteid_add() {
@@ -155,9 +186,11 @@
 	config_get remoteid "$cfg" remoteid
 	[ -n "$remoteid" ] || return 0
 
-	append args "--dhcp-remoteid=$networkid,$remoteid"
+	xappend "--dhcp-remoteid=$networkid,$remoteid"
 
-	dhcp_option_add "$cfg" "$networkid"
+	config_get_bool force "$cfg" force 0
+
+	dhcp_option_add "$cfg" "$networkid" "$force"
 }
 
 dhcp_circuitid_add() {
@@ -169,9 +202,11 @@
 	config_get circuitid "$cfg" circuitid
 	[ -n "$circuitid" ] || return 0
 
-	append args "--dhcp-circuitid=$networkid,$circuitid"
+	xappend "--dhcp-circuitid=$networkid,$circuitid"
 
-	dhcp_option_add "$cfg" "$networkid"
+	config_get_bool force "$cfg" force 0
+
+	dhcp_option_add "$cfg" "$networkid" "$force"
 }
 
 dhcp_userclass_add() {
@@ -183,9 +218,11 @@
 	config_get userclass "$cfg" userclass
 	[ -n "$userclass" ] || return 0
 
-	append args "--dhcp-userclass=$networkid,$userclass"
+	xappend "--dhcp-userclass=$networkid,$userclass"
 
-	dhcp_option_add "$cfg" "$networkid"
+	config_get_bool force "$cfg" force 0
+
+	dhcp_option_add "$cfg" "$networkid" "$force"
 }
 
 dhcp_vendorclass_add() {
@@ -197,30 +234,51 @@
 	config_get vendorclass "$cfg" vendorclass
 	[ -n "$vendorclass" ] || return 0
 
-	append args "--dhcp-vendorclass=$networkid,$vendorclass"
+	xappend "--dhcp-vendorclass=$networkid,$vendorclass"
 
-	dhcp_option_add "$cfg" "$networkid"
+	config_get_bool force "$cfg" force 0
+
+	dhcp_option_add "$cfg" "$networkid" "$force"
 }
 
 dhcp_host_add() {
 	local cfg="$1"
 
-	config_get name "$cfg" name
+	config_get_bool force "$cfg" force 0
 
 	config_get networkid "$cfg" networkid
-	[ -n "$networkid" ] && dhcp_option_add "$cfg" "$networkid"
+	[ -n "$networkid" ] && dhcp_option_add "$cfg" "$networkid" "$force"
 
+	config_get name "$cfg" name
 	config_get ip "$cfg" ip
-	[ -n "$ip" ] || return 0
+	[ -n "$ip" -o -n "$name" ] || return 0
 
 	macs=""
 	config_get mac "$cfg" mac
 	for m in $mac; do append macs "$m" ","; done
 	[ -n "$macs" ] || return 0
 
-	append args "--dhcp-host=$macs,${networkid:+net:$networkid,}$ip${name:+,$name}"
+	config_get tag "$cfg" tag
+
+	xappend "--dhcp-host=$macs${networkid:+,net:$networkid}${tag:+,set:$tag}${ip:+,$ip}${name:+,$name}"
 }
 
+dhcp_tag_add() {
+	local cfg="$1"
+
+	tag="$cfg"
+
+	[ -n "$tag" ] || return 0
+
+	config_get_bool force "$cfg" force 0
+	[ "$force" = "0" ] && force=
+
+	config_get option "$cfg" dhcp_option
+	for o in $option; do
+		xappend "--dhcp-option${force:+-force}=tag:$tag,$o"
+	done
+}
+
 dhcp_mac_add() {
 	local cfg="$1"
 
@@ -230,7 +288,7 @@
 	config_get mac "$cfg" mac
 	[ -n "$mac" ] || return 0
 
-	append args "--dhcp-mac=$networkid,$mac"
+	xappend "--dhcp-mac=$networkid,$mac"
 
 	dhcp_option_add "$cfg" "$networkid"
 }
@@ -249,9 +307,11 @@
 	config_get serveraddress "$cfg" serveraddress
 	[ -n "$serveraddress" ] || return 0
 
-	append args "--dhcp-boot=${networkid:+net:$networkid,}$filename,$servername,$serveraddress"
+	xappend "--dhcp-boot=${networkid:+net:$networkid,}$filename,$servername,$serveraddress"
 
-	dhcp_option_add "$cfg" "$networkid"
+	config_get_bool force "$cfg" force 0
+
+	dhcp_option_add "$cfg" "$networkid" "$force"
 }
 
 
@@ -271,7 +331,7 @@
 		DNS_SERVERS="$DNS_SERVERS $dnsserver"
 	}
 
-	append_bool "$cfg" ignore "-2 $ifname" && return 0
+	append_bool "$cfg" ignore "--no-dhcp-interface=$ifname" && return 0
 
 	config_get proto "$net" proto
 	[ static = "$proto" ] || return 0
@@ -300,9 +360,10 @@
 	leasetime="${leasetime:-12h}"
 	start="$(dhcp_calc "${start:-100}")"
 	limit="${limit:-150}"
+	[ "$limit" -gt 0 ] && limit=$((limit-1))
 	eval "$(ipcalc.sh $ipaddr $netmask $start $limit)"
 	if [ "$dynamicdhcp" = "0" ]; then END="static"; fi
-	append args "--dhcp-range=$networkid,$START,$END,$NETMASK,$leasetime${options:+ $options}"
+	xappend "--dhcp-range=$networkid,$START,$END,$NETMASK,$leasetime${options:+ $options}"
 
 	dhcp_option_add "$cfg" "$networkid"
 }
@@ -310,10 +371,13 @@
 dhcp_option_add() {
 	local cfg="$1"
 	local networkid="$2"
+	local force="$3"
 
+	[ "$force" = "0" ] && force=
+
 	config_get dhcp_option "$cfg" dhcp_option
 	for o in $dhcp_option; do
-		append args "-O $networkid","$o"
+		xappend "--dhcp-option${force:+-force}=${networkid:+$networkid,}$o"
 	done
 
 }
@@ -337,15 +401,65 @@
 		[ "${fqdn%.*}" == "$fqdn" ] && \
 			fqdn="$fqdn${DOMAIN:+.$DOMAIN}"
 
-		append args "-A /$fqdn/$ip"
-		
+		xappend "--address=/$fqdn/$ip"
+
 		[ -n "$raddr" ] && {
-			append args "--ptr-record=$raddr,$fqdn"
+			xappend "--ptr-record=$raddr,$fqdn"
 			raddr=""
 		}
 	done
 }
 
+dhcp_srv_add() {
+	local cfg="$1"
+
+	config_get srv "$cfg" srv
+	[ -n "$srv" ] || return 0
+
+	config_get target "$cfg" target
+	[ -n "$target" ] || return 0
+
+	config_get port "$cfg" port
+	[ -n "$port" ] || return 0
+
+	config_get class "$cfg" class
+	config_get weight "$cfg" weight
+
+	local service="$srv,$target,$port${class:+,$class${weight:+,$weight}}"
+
+	xappend "--srv-host=$service"
+}
+
+dhcp_mx_add() {
+	local cfg="$1"
+	local domain relay pref
+
+	config_get domain "$cfg" domain
+	[ -n "$domain" ] || return 0
+
+	config_get relay "$cfg" relay
+	[ -n "$relay" ] || return 0
+
+	config_get pref "$cfg" pref 0
+
+	local service="$domain,$relay,$pref"
+
+	xappend "--mx-host=$service"
+}
+
+dhcp_cname_add() {
+	local cfg="$1"
+	local cname target
+
+	config_get cname "$cfg" cname
+	[ -n "$cname" ] || return 0
+
+	config_get target "$cfg" target
+	[ -n "$target" ] || return 0
+
+	xappend "--cname=${cname},${target}"
+}
+
 start() {
 	include /lib/network
 	scan_interfaces
@@ -355,28 +469,49 @@
 
 	config_load dhcp
 
+	# before we can call xappend
+	mkdir -p $(dirname $CONFIGFILE)
+
+	echo "# auto-generated config file from /etc/config/dhcp" > $CONFIGFILE
+
+	# if we did this last, we could override auto-generated config
+	[ -f /etc/dnsmasq.conf ] && {
+		xappend "--conf-file=/etc/dnsmasq.conf"
+	}
+
 	args=""
 	config_foreach dnsmasq dnsmasq
 	config_foreach dhcp_host_add host
+	echo >> $CONFIGFILE
 	config_foreach dhcp_boot_add boot
 	config_foreach dhcp_mac_add mac
+	config_foreach dhcp_tag_add tag
 	config_foreach dhcp_vendorclass_add vendorclass
 	config_foreach dhcp_userclass_add userclass
 	config_foreach dhcp_circuitid_add circuitid
 	config_foreach dhcp_remoteid_add remoteid
 	config_foreach dhcp_subscrid_add subscrid
 	config_foreach dhcp_domain_add domain
+	echo >> $CONFIGFILE
+	config_foreach dhcp_srv_add srvhost
+	config_foreach dhcp_mx_add mxhost
+	echo >> $CONFIGFILE
 	config_foreach dhcp_add dhcp
+	echo >> $CONFIGFILE
+	config_foreach dhcp_cname_add cname
+	echo >> $CONFIGFILE
 
 	# add own hostname
-	[ -z "$lanaddr" ] || {
+	[ $ADD_LOCAL_HOSTNAME -eq 1 ] && [ -n "$lanaddr" ] && {
 		local hostname="$(uci_get system.@system[0].hostname)"
 		dhcp_domain_add "" "${hostname:-OpenWrt}" "$lanaddr"
 	}
 
-	/usr/sbin/dnsmasq $args && {
+	service_start /usr/sbin/dnsmasq -C $CONFIGFILE && {
 		rm -f /tmp/resolv.conf
-		[ -n "$DOMAIN" ] && echo "search $DOMAIN" >> /tmp/resolv.conf
+		[ $ADD_LOCAL_DOMAIN -eq 1 ] && [ -n "$DOMAIN" ] && {
+			echo "search $DOMAIN" >> /tmp/resolv.conf
+		}
 		DNS_SERVERS="$DNS_SERVERS 127.0.0.1"
 		for DNS_SERVER in $DNS_SERVERS ; do
 			echo "nameserver $DNS_SERVER" >> /tmp/resolv.conf
@@ -385,10 +520,10 @@
 }
 
 stop() {
-	[ -f /tmp/resolv.conf ] && {
-		rm -f /tmp/resolv.conf
-		ln -s /tmp/resolv.conf.auto /tmp/resolv.conf
+	service_stop /usr/sbin/dnsmasq && {
+		[ -f /tmp/resolv.conf ] && {
+			rm -f /tmp/resolv.conf
+			ln -s /tmp/resolv.conf.auto /tmp/resolv.conf
+		}
 	}
-	killall dnsmasq
-	return 0
 }
Index: package/dnsmasq/Makefile
===================================================================
--- package/dnsmasq/Makefile	(Revision 33203)
+++ package/dnsmasq/Makefile	(Arbeitskopie)
@@ -1,6 +1,6 @@
-# 
-# Copyright (C) 2006-2011 OpenWrt.org
 #
+# Copyright (C) 2006-2012 OpenWrt.org
+#
 # This is free software, licensed under the GNU General Public License v2.
 # See /LICENSE for more information.
 #
@@ -8,13 +8,15 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=dnsmasq
-PKG_VERSION:=2.55
-PKG_RELEASE:=6.1
+PKG_VERSION:=2.63
+PKG_RELEASE:=1
 
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
 PKG_SOURCE_URL:=http://thekelleys.org.uk/dnsmasq
-PKG_MD5SUM:=b093d7c6bc7f97ae6fd35d048529232a
+PKG_MD5SUM:=43e771997615ebcd8f6c6ffa60c3e40b
 
+PKG_INSTALL:=1
+
 include $(INCLUDE_DIR)/package.mk
 
 define Package/dnsmasq
@@ -33,18 +35,19 @@
 /etc/dnsmasq.conf
 endef
 
-define Build/Compile
-	$(MAKE) -C $(PKG_BUILD_DIR) \
-		$(TARGET_CONFIGURE_OPTS) \
-		CFLAGS="$(TARGET_CFLAGS)" \
-		BINDIR="/usr/sbin" MANDIR="/usr/man" \
-		AWK="awk" \
-		all
-endef
+TARGET_CFLAGS += \
+	-ffunction-sections -fdata-sections \
+	$(if $(CONFIG_IPV6),,-DNO_IPV6)
 
+MAKE_FLAGS := \
+	$(TARGET_CONFIGURE_OPTS) \
+	CFLAGS="$(TARGET_CFLAGS)" \
+	LDFLAGS="-Wl,--gc-sections" \
+	PREFIX="/usr"
+
 define Package/dnsmasq/install
 	$(INSTALL_DIR) $(1)/usr/sbin
-	$(INSTALL_BIN) $(PKG_BUILD_DIR)/src/dnsmasq $(1)/usr/sbin/
+	$(CP) $(PKG_INSTALL_DIR)/usr/sbin/dnsmasq $(1)/usr/sbin/
 	$(INSTALL_DIR) $(1)/etc/config
 	$(INSTALL_DATA) ./files/dhcp.conf $(1)/etc/config/dhcp
 	$(INSTALL_DATA) ./files/dnsmasq.conf $(1)/etc/dnsmasq.conf
--- package/dnsmasq/patches/101-ipv6.patch	2012-08-17 15:40:44.581971001 +0200
+++ /dev/null	2012-08-17 07:36:30.570000003 +0200
@@ -1,13 +0,0 @@
---- a/src/config.h
-+++ b/src/config.h
-@@ -269,8 +269,9 @@ NOTES:
- /* We assume that systems which don't have IPv6
-    headers don't have ntop and pton either */
- 
--#if defined(INET6_ADDRSTRLEN) && defined(IPV6_V6ONLY) && !defined(NO_IPV6)
-+#if defined(INET6_ADDRSTRLEN) && !defined(NO_IPV6)
- #  define HAVE_IPV6
-+#  define IPV6_V6ONLY 26
- #  define ADDRSTRLEN INET6_ADDRSTRLEN
- #  if defined(SOL_IPV6)
- #    define IPV6_LEVEL SOL_IPV6
