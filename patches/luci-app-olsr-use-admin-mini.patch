diff --git a/applications/luci-olsr/luasrc/controller/olsr.lua b/applications/luci-olsr/luasrc/controller/olsr.lua
index 371bad8..7b642f2 100644
--- a/applications/luci-olsr/luasrc/controller/olsr.lua
+++ b/applications/luci-olsr/luasrc/controller/olsr.lua
@@ -10,6 +10,7 @@ function index()
 	page.title  = _("OLSR")
 	page.i18n   = "olsr"
 	page.subindex = true
+	assign({"mini", "status", "olsr"}, {"admin", "status", "olsr"}, "OLSR", 30)
 
 	local page  = node("admin", "status", "olsr", "neighbors")
 	page.target = call("action_neigh")
@@ -53,26 +54,31 @@ function index()
 	)
 	ol.i18n = "olsr"
 	ol.subindex = true
+	assign({"mini", "services", "olsrd"}, {"admin", "services", "olsrd"}, _("olsr"))
 
 	entry(
 		{"admin", "services", "olsrd", "iface"},
 		cbi("olsr/olsrdiface")
 	).leaf = true
+	assign({"mini", "services", "olsrd", "iface"}, {"admin", "services", "olsrd", "iface"}, _("Interface"))
 
 	entry(
 		{"admin", "services", "olsrd", "hna"},
 		cbi("olsr/olsrdhna"), _("HNA Announcements")
 	)
+	assign({"mini", "services", "olsrd", "hna"}, {"admin", "services", "olsrd", "hna"}, _("HNA Announcements"))
 
 	oplg = entry(
 		{"admin", "services", "olsrd", "plugins"},
 		cbi("olsr/olsrdplugins"), _("Plugins")
 	)
+	assign({"mini", "services", "olsrd", "plugins"}, {"admin", "services", "olsrd", "plugins"}, _("Plugins"))
 
 	odsp = entry(
 		{"admin", "services", "olsrd", "display"},
 		cbi("olsr/olsrddisplay"), _("Display")
-		)
+	)
+	assign({"mini", "services", "olsrd", "display"}, {"admin", "services", "olsrd", "display"}, _("Display"))
 
 	oplg.i18n = "olsr"
 	oplg.leaf = true
@@ -87,6 +93,11 @@ function index()
 				cbi("olsr/olsrdplugins"),
 				nil --'Plugin "%s"' % lib:gsub("^olsrd_",""):gsub("%.so.+$","")
 			)
+			assign(
+				{"mini", "services", "olsrd", "plugins", lib },
+				{"admin", "services", "olsrd", "plugins", lib},
+				lib
+			)
 		end
 	)
 end
@@ -237,6 +248,7 @@ function fetch_txtinfo(otable)
 	local dataindex = 0
 	local name = ""
 	local defaultgw
+	local defaultgw6
 
 	if #rawdata ~= 0 then
 		local tables = luci.util.split(luci.util.trim(rawdata), "\r?\n\r?\n", nil, true)
@@ -309,6 +321,18 @@ function fetch_txtinfo(otable)
 
 	if #rawdatav6 ~= 0 then
 		local tables = luci.util.split(luci.util.trim(rawdatav6), "\r?\n\r?\n", nil, true)
+		if otable == "links" then
+			dr6 = luci.sys.net.defaultroute6()
+			if dr6 then
+				defaultgw6 = dr6.nexthop:string()
+				if defaultgw6 then
+					defaultgw6 = string.gsub(defaultgw6, ':0:', '::',1)
+					defaultgw6 = string.gsub(defaultgw6, ':0:', ':')
+					defaultgw6 = string.gsub(defaultgw6, ':0:', ':')
+					defaultgw6 = string.lower(defaultgw6)
+				end
+			end
+		end
 		for i, tbl in ipairs(tables) do
 			local lines = luci.util.split(tbl, "\r?\n", nil, true)
 			name  = table.remove(lines, 1):sub(8)
@@ -330,16 +354,19 @@ function fetch_txtinfo(otable)
 							if hostname then
 								data[name][di]["Hostname"] = hostname
 							end
+							if defaultgw6 == fields[k] then
+								data[name][di]["defaultgw"] = 1
+							end
 						end
 					elseif key == "Local IP" then
 						data[name][di][key] = fields[k]
 						data[name][di]['Local Device'] = fields[k]
+						local localip = string.gsub(fields[k], '	', ''):lower()
 						uci:foreach("network", "interface",
 						function(s)
-							local localip = string.gsub(fields[k], '	', ''):upper()
 							if s.ip6addr then
-								s.ip6addr = luci.ip.IPv6(s.ip6addr):string()
-								local ip6addr = string.gsub(s.ip6addr, '\/.*', '')
+								local ip6addr = s.ip6addr
+								ip6addr = string.gsub(ip6addr, '\/.*', '')
 								if ip6addr == localip then
 									data[name][di]['Local Device'] = s['.name'] or s.interface
 								end
diff --git a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua
index 9bdf3a3..dd9eac1 100644
--- a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua
+++ b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrd.lua
@@ -342,7 +342,7 @@ av.write = write_float
 ifs = m:section(TypedSection, "Interface", translate("Interfaces"))
 ifs.addremove = true
 ifs.anonymous = true
-ifs.extedit   = luci.dispatcher.build_url("admin/services/olsrd/iface/%s")
+ifs.extedit   = luci.dispatcher.build_url("mini/services/olsrd/iface/%s")
 ifs.template  = "cbi/tblsection"
 
 function ifs.create(...)
diff --git a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua
index 25692fd..2a5c9ce 100644
--- a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua
+++ b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdiface.lua
@@ -26,7 +26,7 @@ m = Map("olsrd", translate("OLSR Daemon - Interface"),
 	"It runs on any wifi card that supports ad-hoc mode and of course on any ethernet device. "..
 	"Visit <a href='http://www.olsr.org'>olsrd.org</a> for help and documentation."))
 
-m.redirect = luci.dispatcher.build_url("admin/services/olsrd")
+m.redirect = luci.dispatcher.build_url("mini/services/olsrd")
 
 if not arg[1] or m.uci:get("olsrd", arg[1]) ~= "Interface" then
 	luci.http.redirect(m.redirect)
diff --git a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua
index 2cfccdd..7e1d4ba 100644
--- a/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua
+++ b/applications/luci-olsr/luasrc/model/cbi/olsr/olsrdplugins.lua
@@ -247,7 +247,7 @@ else
 	t.override_scheme = true
 	function t.extedit(self, section)
 		local lib = self.map:get(section, "library") or ""
-		return luci.dispatcher.build_url("admin", "services", "olsrd", "plugins") .. "/" .. lib
+		return luci.dispatcher.build_url("mini", "services", "olsrd", "plugins") .. "/" .. lib
 	end
 
 	ign = t:option( Flag, "ignore", translate("Enabled") )
